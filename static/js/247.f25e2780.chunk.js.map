{"version":3,"file":"static/js/247.f25e2780.chunk.js","mappings":"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","sources":["api/api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e9acf87159af330adc40d01b23a69585\";\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (searchQuery) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport  const fetchMovieReviews = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n// ${BASE_URL}/movie/${}/reviews?api_key=${API_KEY}","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { fetchMovieCredits } from '../../api/api';\n\nconst Cast = () => {\n  const {id} = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getMovieCast(id) {\n      try {\n        const {cast} = await fetchMovieCredits(id);\n        setCast(cast)\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    getMovieCast(id)\n  }, [id])\n  \n  return (\n    (\n      <div>\n        {cast.length ? (\n          <ul>\n            {cast.map(({ id, name, character, profile_path }) => (\n              <li key={id}>\n                {profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                    alt={`${name}`}\n                    width=\"150\"\n                  ></img>\n                ) : (\n                  <img\n                    src={\n                      '/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/330px-No-Image-Placeholder.svg.png?20200912122019'\n                    }\n                    alt=\"Not found\"\n                    width=\"150\"\n                  ></img>\n                )}\n                <h3>{name}</h3>\n                {character ? (\n                  <p>Character: {character}</p>\n                ) : (\n                  <p>Character: Unknown</p>\n                )}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>There are no cast information abour this movie...ðŸ˜¿</p>\n        )}\n      </div>\n    )\n  )\n}\n\nexport default Cast"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","searchQuery","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieID","_yield$axios$get3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","id","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","_getMovieCast","_yield$fetchMovieCred","_cast","t0","console","log","message","getMovieCast","_jsx","children","length","map","name","character","profile_path","_jsxs","src","alt","width"],"sourceRoot":""}