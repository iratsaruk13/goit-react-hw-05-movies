{"version":3,"file":"static/js/540.afbf62b0.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MoviesList.jsx","components/Search/Search.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e9acf87159af330adc40d01b23a69585\";\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async (searchQuery) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&include_adult=false&language=en-US&page=1`\n  );\n  return data;\n};\n\nexport const fetchMovieDetails = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCredits = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport  const fetchMovieReviews = async (movieID) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\n// ${BASE_URL}/movie/${}/reviews?api_key=${API_KEY}","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ movies }) => {\nconst location = useLocation();\n\nconst path = location.pathname.includes('/movies') ? '' : 'movies/';\n\n  return (\n    <section>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`${path}${movie.id}`} state={{from:location}}>{movie.title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default MoviesList;\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst Search = ({ onSubmit }) => {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const searchQuery = e.target.elements.searchQuery.value;\n\n    if (!searchQuery) {\n      toast.error(\"Enter your search query, please\");\n      return;\n    }\n    onSubmit(searchQuery);\n    e.target.reset()\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"searchQuery\" placeholder=\"Enter your search query\"/>\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport  {fetchSearchMovies}  from \"../api/api\";\nimport { toast } from \"react-toastify\";\nimport MoviesList from \"../components/MoviesList/MoviesList\";\nimport Search from \"../components/Search/Search\";\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get(\"movie\") ?? \"\";\n    if (!searchQuery) return;\n\n    async function getSearchMovie(searchQuery) {\n      try {\n        const { results } = await fetchSearchMovies(searchQuery);\n        console.log(results);\n\n        if (results.length === 0) {\n          toast.error(\"There are no movies matching your query ðŸ˜¿\");\n          setMovie([]);\n        } else {\n          setMovie(results);\n        }\n      } catch (error) {\n        toast.error(error.message);\n        setMovie([]);\n      }\n    }\n    getSearchMovie(searchQuery);\n  }, [searchParams]);\n\n  const onMovieNameChange = searchQuery => {\n    setSearchParams({movie: searchQuery})\n  }\n\n  return (\n    <>\n      <Search onSubmit={onMovieNameChange}></Search>\n      <MoviesList movies={movie} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","searchQuery","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieID","_yield$axios$get3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","movies","location","useLocation","path","pathname","includes","_jsx","children","map","movie","Link","to","id","state","from","title","onSubmit","_Fragment","_jsxs","e","preventDefault","target","elements","value","reset","toast","type","name","placeholder","_useState","useState","_useState2","_slicedToArray","setMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","_searchParams$get","get","_getSearchMovie","_yield$fetchSearchMov","results","console","log","length","t0","message","getSearchMovie","Search","MoviesList"],"sourceRoot":""}